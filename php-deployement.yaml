apiVersion: v1
kind: Service
metadata:
  name: webapp-sql
spec:
  selector:
    app: webapp-sql
    tier: frontend
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp1
  labels:
    app: webapp-sql
    tier: frontend
spec:
  selector:
    matchLabels:
      app: webapp-sql
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp-sql
        tier: frontend
    spec:
      containers:
      - name: webapp1
        image: gcr.io/metal-ring-351215/my-image2:v2
        imagePullPolicy: Always
        env:
        - name: DB_HOST
          value: 127.0.0.1:3306
            # These secrets are required to start the pod.
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        ports:
        - containerPort: 8081
        #volumeMounts:
        #- name: webstorage
          #mountPath: /var/www/html
      #volumes:
      #- name: webstorage
        #persistentVolumeClaim:
          #claimName: phpwebpvc
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=metal-ring-351215:us-central1:mysql-instance=tcp:3306",
                     #If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                     #https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                     #"-ip_address_types=PRIVATE",
                  "-credential_file=/secrets/cloudsql/key.json"]
        securityContext:
              runAsUser: 2  # non-root user
              allowPrivilegeEscalation: false
        volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        #- name: php-sql-persistent-storage
          #persistentVolumeClaim:
            #claimName: php-sql-volumeclaim
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
